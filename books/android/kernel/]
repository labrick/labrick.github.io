# 3.13 BusyBox

2017-02-22

--------------

## 嵌入式Linux的瑞士军刀

BusyBox是高度模块化和高度可配置性的，而且可以对其进行裁剪，工具小巧高效，可以替代一大批常用的标准Linux命令行工具，而且它所需要的整体系统资源很少

实际上BusyBox重新实了桌面Linux发行版中的命令，只是功能有所简化，可以将它看做对应命令的精简版本。在某种情况下，它只支持一部分常用的命令行参数。而且，实际上你会发现，BusyBox所实现的这部分命令功能子集已足以满足一般的嵌入式需求。

## 配置构建BusyBox

1. 执行一个配置工具，并开启所选的特性；
2. 运行make命令构建BusyBox软件包；
3. 将编译出的二进制工具和一系列符号链接(symbolic link)安装到目标系统中。

下载BusyBox源码，和配置linux内核一样，在BusyBox顶层目录下执行`make menuconfig`会启动一个图形化配置工具(基于ncurses图形库)，`make help`会输出所有可用的make目标以及它们的相关信息。

    $ make menuconfig

具体的先省略........

安装时目录结构：

    # make install
    $ ls -l /
    total 12
    drwxrwxr-x  2   root    root    4096    Feb 23  14:33   bin
    lrwxrwxrwx  1   root    root      11    Feb 23  14:33   linuxrc -> bin/busybox
    drwxrwxr-x  2   root    root    4096    Feb 23  14:33   sbin
    drwxrwxr-x  4   root    root    4096    Feb 23  14:33   usr

    $ tree
    .
    |-- bin
    |-- |-- addgroup -> busybox
    |-- |-- busybox
    |-- |-- cat -> busybox
    |-- |-- cp -> busybox
    ...
    |-- linuxrc -> bin/busybox
    |-- sbin
    |-- |-- halt -> ../bin/busybox


## BusyBox的操作

构建BusyBox后，最终会获得一个二进制可执行程序，名称为busybox，我们可使用这个名称本身来执行BusyBox，但一般通过符号链接(symlink)来调用它。

如果在执行BusyBox时没有带任何参数，它会输出所有它支持的功能（命令），这些函数的功能是我们在配置BusyBox时开启的。

想要执行一个特定的函数，可以在命令行中输入busybox，之后加上这个函数的名称。

    $ busybox ls /
